{% set name = "numba" %}
{% set version = "0.39.0" %}
{% set hash_type = "sha256" %}
{% set hash_value = "07749d1ddac8c4c0ce8b22bf3dec52ef2fd4922174c71447126807f5f8dc2bae" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  skip: true  # [win]
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
  host:
    - python
    - setuptools
    - pip
    - llvmlite 0.24.*
    - numpy 1.11.*
    - enum34  # [py2k]
    - singledispatch  # [py2k]
    - funcsigs  # [py2k]
  run:
    - python
    - llvmlite 0.24.*
    - numpy >=1.11
    - enum34  # [py2k]
    - singledispatch  # [py2k]
    - funcsigs  # [py2k]
    - jinja2

test:
  requires:
    - scipy
  imports:
    - numba
    - numba.annotations
    - numba.cuda
    - numba.cuda.cudadrv
    - numba.cuda.kernels
    - numba.cuda.simulator
    - numba.cuda.simulator.cudadrv
    - numba.cuda.tests
    - numba.cuda.tests.cudadrv
    - numba.cuda.tests.cudadrv.data
    - numba.cuda.tests.cudapy
    - numba.cuda.tests.cudasim
    - numba.cuda.tests.nocuda
    - numba.datamodel
    - numba.jitclass
    - numba.npyufunc
    - numba.pycc
    - numba.rewrites
    - numba.runtime
    - numba.scripts
    - numba.servicelib
    - numba.targets
    - numba.testing
    - numba.tests
    - numba.tests.npyufunc
    - numba.typeconv
    - numba.types
    - numba.typing
    - numba.unsafe
  files:
    - run_test.py
  commands:
    - python -m numba.runtests
about:
  home: http://numba.github.com
  license: BSD 2-clause
  license_family: BSD
  license_file: LICENSE
  summary: NumPy aware dynamic Python compiler using LLVM
  description: | 
    Numba is an Open Source NumPy-aware optimizing compiler for Python 
    sponsored by Anaconda, Inc. It uses the remarkable LLVM compiler 
    infrastructure to compile Python syntax to machine code."
  doc_url: http://numba.pydata.org/
  dev_url: https://github.com/numba/numba

extra:
  recipe-maintainers:
    - souravsingh
